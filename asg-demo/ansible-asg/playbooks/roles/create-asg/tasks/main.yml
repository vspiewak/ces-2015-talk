- name: Create EC2 Elastic Load Balancer
  local_action:
    module: ec2_elb_lb
    name: "{{env.client}}-{{env.stage}}-elasticsearch-elb"
    state: present
    cross_az_load_balancing: "yes"
    zones:
      - "{{amazon.region}}a"
      - "{{amazon.region}}b"
      - "{{amazon.region}}c"
    listeners:
      - protocol: http
        load_balancer_port: 9200
        instance_port: 9200
    health_check:
        ping_protocol: http
        ping_port: 9200
        ping_path: "/"
        response_timeout: 2
        interval: 5
        unhealthy_threshold: 2
        healthy_threshold: 2

- name: Create EC2 Launch configuration
  local_action:
    module: ec2_lc
    name: "{{env.client}}.{{env.stage}}.elasticsearch.launchconfiguration"
    image_id: "{{ami.es_image}}"
    key_name: "{{keypair}}"
    security_groups: [ "{{amazon.vpc.id}}_{{env.client}}_{{env.stage}}_elasticsearch_node_sg" ]
    instance_type: t2.micro

- name: Create EC2 Auto Scaling Group
  local_action:
    module: ec2_asg
    name: "{{env.client}}.{{env.stage}}.elasticsearch.autoscalinggroup"
    launch_config_name: "{{env.client}}.{{env.stage}}.elasticsearch.launchconfiguration"
    load_balancers: [ "{{env.client}}-{{env.stage}}-elasticsearch-elb" ]
    health_check_period: 180
    health_check_type: ELB
    replace_all_instances: yes
    min_size: 3
    max_size: 10
    desired_capacity: 3
    region: "{{amazon.region}}"
    wait_for_instances: no
    tags:
    - Name: "{{env.client}}.{{env.stage}}.elasticsearch_node"
