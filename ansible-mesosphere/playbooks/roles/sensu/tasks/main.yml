# Sensu role

- name: Install Erlang
  apt:
    pkg="erlang-nox={{version.erlang}}"
    state=present
    update_cache=yes

- name: Install APT Key for RabbitMQ repository
  apt_key:
    url=http://www.rabbitmq.com/rabbitmq-signing-key-public.asc
    state=present

- name: Install APT RabbitMQ repository
  apt_repository:
    repo="deb     http://www.rabbitmq.com/debian/ testing main"
    state=present

- name: Install RabbitMQ
  apt:
    pkg="rabbitmq-server={{version.rabbitmq}}"
    state=present
    update_cache=yes

- name: Enable RabbitMQ service
  service:
    name=rabbitmq-server
    enabled=yes
    state=started

- name: Wait 10 seconds for RabbitMQ server to be up
  shell: sleep 10

- name: Create a RabbitMQ server vhost
  shell: rabbitmqctl delete_vhost /sensu
  ignore_errors: yes
- shell: rabbitmqctl add_vhost /sensu

- name: Create a RabbitMQ user for the sensu vhost
  shell: rabbitmqctl delete_user sensu
  ignore_errors: yes
  shell: rabbitmqctl add_user sensu secret

- name: Set permissions for RabbitMQ user to sensu vhost
  shell: rabbitmqctl set_permissions -p /sensu sensu ".*" ".*" ".*"

- name: Enable RabbitMQ web management console
  shell: rabbitmq-plugins enable rabbitmq_management

- name: Install Redis server
  apt:
    pkg="redis-server={{version.redis}}"
    state=present

- name: Enable Redis service
  service:
    name=redis-server
    enabled=yes
    state=restarted

- name: Install APT Key for Sensu repository
  apt_key:
    url=http://repos.sensuapp.org/apt/pubkey.gpg
    state=present

- name: Install APT Sensu repository
  apt_repository:
    repo="deb     http://repos.sensuapp.org/apt sensu main"
    state=present

- name: Install Sensu package
  apt:
    pkg="sensu={{version.sensu}}"
    state=present
    update_cache=yes

- name: Configure sensu
  copy:
    src=config.json
    dest=/etc/sensu/config.json
    owner=sensu
    group=sensu
    mode=0644

- name: Install Uchiwa package
  apt:
    pkg="uchiwa={{version.uchiwa}}"
    state=present

- name: 'Configure sensu default handler'
  copy:
    src=default_handler.json
    dest=/etc/sensu/conf.d/default_handler.json
    owner=sensu
    group=sensu
    mode=0644

- name: 'Configure Sensu client'
  template:
    src=client.json.j2
    dest=/etc/sensu/conf.d/client.json
    owner=sensu
    group=sensu
    mode=0755

- name: 'Configure Sensu api'
  copy:
    src=uchiwa.json
    dest=/etc/sensu/uchiwa.json
    owner=sensu
    group=sensu
    mode=0755

- name: Configure Uchiwa dashboard
  copy: src=uchiwa.json dest=/etc/sensu/uchiwa.json owner=sensu group=sensu mode=0644

- name: Install Ruby & Gem tools
  apt:
    pkg={{item}}
    state=present
  with_items:
   - tar
   - patch
   - make
   - gcc
   - g++
   - ruby
   - ruby-dev

- name: Install Gem used by sensu checks
  gem: name={{item}}
    user_install=no
    state=present
  with_items:
   - net
   - json
   - rest-client
   - zookeeper
   - sensu-plugin

- name: 'Install Sensu community plugins'
  get_url:
    url=https://raw.githubusercontent.com/sensu/sensu-community-plugins/master/plugins/{{item.folder}}/{{item.name}}.rb
    dest=/etc/sensu/plugins/{{item.name}}.rb
  with_items:
    - { folder: "http",      name: "check-http"     }
    - { folder: "zookeeper", name: "check-znode"    }
    - { folder: "mesos",     name: "check-mesos"    }
    - { folder: "mesos",     name: "check-marathon" }

- name: 'Set file permissions on plugins'
  file: path=/etc/sensu/plugins/{{item}}.rb state=touch mode="u=rwx,g=r,o=r"
  with_items:
    - check-http
    - check-znode
    - check-mesos
    - check-marathon

- name: 'Configure checks'
  template:
    src={{item}}.json.j2
    dest=/etc/sensu/conf.d/{{item}}.json
    owner=sensu
    group=sensu
    mode=0755
  with_items:
    - check-zookeeper
    - check-mesos
    - check-marathon

- name: 'Set /etc/sensu ownership to sensu user'
  file:
    path=/etc/sensu
    owner=sensu
    group=sensu
    state=directory
    recurse=yes

- name: Enable Sensu server service
  service: name=sensu-server enabled=yes state=started
  sudo_user: root

- name: Enable Sensu api service
  service: name=sensu-api enabled=yes state=started
  sudo_user: root

- name: Enable Sensu client service
  service: name=sensu-client enabled=yes state=started
  sudo_user: root

- name: Enable Uchiwa service
  service: name=uchiwa enabled=yes state=started
  sudo_user: root
